apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

def debugProps = new Properties()
def debugConfigFile = file("../debug_config.properties")

if (debugConfigFile != null && debugConfigFile.canRead()) {
    debugConfigFile.withInputStream { debugProps.load(it) }
}

def releaseProps = new Properties()
def releaseConfigFile = file("../release_config.properties")

if (releaseConfigFile != null && releaseConfigFile.canRead()) {
    releaseConfigFile.withInputStream { releaseProps.load(it) }
}

android {
    signingConfigs {
        releaseConfig {
            if (releaseConfigFile != null && releaseConfigFile.canRead()) {
                keyAlias releaseProps.getProperty("KEY_ALIAS")
                keyPassword releaseProps.getProperty("KEY_PASSWORD")
                storeFile file(releaseProps.getProperty("KEY_STORE_FILE_PATH"))
                storePassword releaseProps.getProperty("KEY_STORE_PASSWORD")
            }
        }
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {

        applicationId "com.ssverma.covidtracker"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
            if (releaseConfigFile != null && releaseConfigFile.canRead()) {
                buildConfigField("String", "BASE_URL", releaseProps.getProperty("BASE_URL"))
            }
        }

        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            if (debugConfigFile != null && debugConfigFile.canRead()) {
                buildConfigField("String", "BASE_URL", debugProps.getProperty("BASE_URL"))
            }
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions { jvmTarget = "1.8" }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //Core
    implementation "com.google.android.material:material:1.1.0"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    //AAC
    implementation "androidx.room:room-ktx:2.2.5"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:2.2.5"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"

    //Networking
    implementation "com.squareup.retrofit2:retrofit:2.8.1"
    implementation "com.squareup.retrofit2:converter-gson:2.6.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.5.0"

    //DI
    api 'com.google.dagger:dagger:2.27'
    kapt 'com.google.dagger:dagger-compiler:2.27'

    //Image Handling
    implementation "com.github.bumptech.glide:glide:4.11.0"

    //Other
    implementation 'com.facebook.shimmer:shimmer:0.4.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
